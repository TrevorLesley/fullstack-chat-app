{"version":3,"sources":["chatsubmit.js","chatwindow.js","register.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["ChatSubmit","props","state","text","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","message","inputMessage","onSubmit","className","type","onChange","Component","ChatWindow","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","ok","Error","json","data","map","id","onClick","handleLogout","Registration","username","email","password1","password2","handleRegister","htmlFor","class","handleForm","Login","password","handleLogin","App","selection","user","a","handleError","err","console","warn","catch","key","set","remove","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.689c4b7c.chunk.js","sourcesContent":["import { Component } from 'react';\n\n\nclass ChatSubmit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n        }\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n      handleSubmit(event) {\n          event.preventDefault();\n          const message = {\n              text: this.state.text,\n          };\n          this.props.inputMessage(message);\n\n          this.setState({ text: '' });\n    }\n    \n    \n    render() {\n\n        return (\n        <form onSubmit={this.handleSubmit}>\n          <input  className=\"text\" type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n    )}\n\n}\n\nexport default ChatSubmit","import { Component } from 'react';\nimport ChatSubmit from './chatsubmit';\nimport Cookies from 'js-cookie';\n\nclass ChatWindow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: [],\n        }\n        this.inputMessage = this.inputMessage.bind(this);\n    }\n      \n    inputMessage(message) {\n        const options = {\n          method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n            \n          body: JSON.stringify(message),\n        }\n    \n        fetch('/api/v1/chat/', options)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not okay');\n                }\n\n                return response.json();\n            })\n            .then(data => this.setState({ message: [...this.state.message, data] }));\n    }\n\n    componentDidMount() {\n        fetch('/api/v1/chat/')\n        .then(response => response.json())\n        .then(data => this.setState({ message: data }));\n      }\n\n    render() {\n        const message = this.state.message.map((message) => (\n          <li key={message.id}>\n            <p>{message.text}</p>\n          </li>\n        ))\n    \n        return(\n          <>\n          <div className=\"chat-log container\">\n            <h1>Chat App</h1>\n                <ul>{message}</ul>\n                <section className=\"main\">\n                        <ChatSubmit inputMessage={this.inputMessage}/>\n                    </section>\n                </div>\n                \n                <button type='button' onClick={this.props.handleLogout}>Log Out</button>\n          </>\n        )\n      }\n}\n\nexport default ChatWindow","import { Component } from 'react';\nimport './App.css';\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.handleRegister(this.state);\n    }\n    \n    render() {\n\n        return (\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"mb-3\">\n            <label htmlFor=\"username\" name=\"username\" id=\"username\" className=\"form-label\">Username</label>\n            <input type=\"text\" className=\"form-control\" id=\"username\" name='username' onChange={this.handleInput}>\n            </input>\n        </div>\n        <div className=\"mb-3\">\n        <label htmlFor=\"email\" name=\"email\" className=\"form-label\">Email address</label>\n        <input type=\"text\" className=\"form-control\" name='email' id=\"email\" onChange={this.handleInput}>\n        </input>\n        </div>\n        <div class=\"mb-3\">\n            <label htmlFor=\"password1\" name='password1' className=\"form-label\">Password</label>\n            <input type=\"password\" className=\"form-control\" name='password1' id=\"password1\" onChange={this.handleInput}>\n            </input>\n            </div>\n            <div className=\"mb-3\">\n            <label htmlFor=\"password2\" name='password2' className=\"form-label\">Confirm Password</label>\n            <input type=\"password\" className=\"form-control\" name='password2' id=\"password2\" onChange={this.handleInput}>\n            </input>\n        </div>\n            <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('login')}>Already have an account? Login!</button>\n        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>        \n        </form>\n        )}\n}\n\nexport default Registration","import { Component } from 'react';\nimport './App.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.handleLogin(this.state);\n    }\n    \n    render() {\n\n        return (\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"mb-3\">\n            <label htmlFor=\"username\" id=\"username\" className=\"form-label\">Username</label>\n            <input type=\"text\" className=\"form-control\" id=\"username\" name='username' onChange={this.handleInput}>\n            </input>\n        </div>\n        <div className=\"mb-3\">\n        <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n        <input type=\"text\" className=\"form-control\" name='email' id=\"email\" onChange={this.handleInput}>\n        </input>\n        </div>\n        <div className=\"mb-3\">\n            <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n            <input type=\"current-password\" className=\"form-control\" name='password' id=\"password1\" onChange={this.handleInput}>\n            </input>\n            </div>   \n                <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('signup')}>Don't have an account? Sign up!</button>\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n\n        </form>\n        )}\n}\n\nexport default Login","import React from 'react';\nimport Cookies from 'js-cookie';\nimport ChatWindow from './chatwindow';\nimport Registration from './register';\nimport Login from './login';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chat' : 'login'\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  async handleLogin(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options);\n    const data = await response.json().catch(handleError);\n\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chat' });\n    }\n\n  }\n\n  async handleLogout() {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n    if(response.ok) {\n      Cookies.remove('Authorization');\n      this.setState({selection: 'login'});\n    }\n\n\n  }\n\n  handleForm(selection) {\n    this.setState({selection});\n  }\n\n  async handleRegister(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options);\n    const data = await response.json().catch(handleError);\n\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chat' });\n    }\n\n  }\n\n  render() {\n    return(\n      <>\n        <div className='background'>\n          {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleForm={this.handleForm}/>}\n          {this.state.selection === 'signup' && <Registration handleRegister={this.handleRegister} handleForm={this.handleForm}/>}\n          {this.state.selection === 'chat' && <ChatWindow handleLogout={this.handleLogout}/>}\n        </div>\n      </>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}