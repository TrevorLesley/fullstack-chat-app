{"version":3,"sources":["chatsubmit.js","chatwindow.js","register.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["ChatSubmit","props","state","text","inputMessage","bind","handleInput","event","this","setState","target","name","value","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","data","push","onSubmit","className","type","onChange","Component","ChatWindow","map","id","Registration","username","email","password1","password2","handleSubmit","preventDefault","handleRegister","class","htmlFor","onClick","handleForm","Login","password","handleLogin","App","selection","user","a","handleError","err","console","warn","catch","key","set","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1472c121.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass ChatSubmit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n        }\n\n        this.inputMessage = this.inputMessage.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n    inputMessage(event) {\n        const message = {\n          text: this.state.text,\n        };\n    \n        const options = {\n          method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n            \n          body: JSON.stringify(message),\n        }\n    \n        fetch('/api/v1/chat/', options)\n          .then(response => response.json())\n          .then(data => {\n            const message = [...this.state.message];\n            message.push(data);\n            this.setState({ message });\n          });\n    }\n    \n    render() {\n\n        return (\n        <form onSubmit={this.inputMessage}>\n          <input  className=\"text\" type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n    )}\n\n}\n\nexport default ChatSubmit","import { Component } from 'react';\nimport ChatSubmit from './chatsubmit';\n\nclass ChatWindow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/v1/chat/')\n        .then(response => response.json())\n        .then(data => this.setState({ message: data }));\n      }\n\n    render() {\n        const message = this.state.message.map((message) => (\n          <li key={message.id}>\n            <p>{message.text}</p>\n          </li>\n        ))\n    \n        return(\n          <>\n          <div className=\"chat-log\">\n            <h1>Chat App</h1>\n                <ul>{message}</ul>\n                <section className=\"main\">\n                    <ChatSubmit/>\n                </section>\n            </div>\n          </>\n        )\n      }\n}\n\nexport default ChatWindow","import { Component } from 'react';\nimport './App.css';\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.handleRegister(this.state);\n    }\n    \n    render() {\n\n        return (\n        <form onSubmit={this.handleSubmit}>\n            <div class=\"mb-3\">\n            <label htmlFor=\"username\" id=\"username\" class=\"form-label\">Username</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" name='username'>\n            </input>\n        </div>\n        <div class=\"mb-3\">\n        <label htmlFor=\"email\" class=\"form-label\">Email address</label>\n        <input type=\"text\" class=\"form-control\" name='email' id=\"email\" onChange={this.handleInput}>\n        </input>\n        </div>\n        <div class=\"mb-3\">\n            <label htmlFor=\"password1\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control\" name='password1' id=\"password1\" onChange={this.handleInput}>\n            </input>\n            </div>\n            <div class=\"mb-3\">\n            <label htmlFor=\"password2\" class=\"form-label\">Confirm Password</label>\n            <input type=\"password\" class=\"form-control\" name='password2' id=\"password2\" onChange={this.handleInput}>\n            </input>\n        </div>\n            <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('login')}>Already have an account? Login!</button>\n        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>        \n        </form>\n        )}\n}\n\nexport default Registration","import { Component } from 'react';\nimport './App.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.handleLogin(this.state);\n    }\n    \n    render() {\n\n        return (\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"mb-3\">\n            <label htmlFor=\"username\" id=\"username\" className=\"form-label\">Username</label>\n            <input type=\"text\" className=\"form-control\" id=\"username\" name='username' onChange={this.handleInput}>\n            </input>\n        </div>\n        <div className=\"mb-3\">\n        <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n        <input type=\"text\" className=\"form-control\" name='email' id=\"email\" onChange={this.handleInput}>\n        </input>\n        </div>\n        <div className=\"mb-3\">\n            <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n            <input type=\"current-password\" className=\"form-control\" name='password' id=\"password1\" onChange={this.handleInput}>\n            </input>\n            </div>   \n                <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleForm('signup')}>Don't have an account? Sign up!</button>\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n\n        </form>\n        )}\n}\n\nexport default Login","import React from 'react';\nimport Cookies from 'js-cookie';\nimport ChatWindow from './chatwindow';\nimport Registration from './register';\nimport Login from './login';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chat' : 'login'\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  async handleLogin(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options);\n    const data = await response.json().catch(handleError);\n\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chat' });\n    }\n\n  }\n\n  handleForm(selection) {\n    this.setState({selection});\n  }\n\n  async handleRegister(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options);\n    const data = await response.json().catch(handleError);\n\n    if (data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chat' });\n    }\n\n  }\n\n  render() {\n    return(\n      <>\n        <div className='background'>\n          {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleForm={this.handleForm}/>}\n          {this.state.selection === 'signup' && <Registration handleRegister={this.handleRegister} handleForm={this.handleForm}/>}\n          {this.state.selection === 'chat' && <ChatWindow/>}\n        </div>\n      </>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}