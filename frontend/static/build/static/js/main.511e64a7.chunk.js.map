{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","message","text","inputMessage","bind","handleInput","fetch","then","response","json","data","setState","event","this","target","name","value","options","method","headers","Cookies","get","body","JSON","stringify","map","id","className","onSubmit","type","onChange","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAsEeA,E,kDAhEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAPF,E,qDAUnB,WAAoB,IAAD,OACjBE,MAAM,iBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEV,QAASS,S,yBAGzC,SAAYE,GACVC,KAAKF,SAAL,eAAgBC,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,0BAGnD,SAAaJ,GAAQ,IAAD,OACZX,EAAU,CACdC,KAAMW,KAAKb,MAAME,MAGbe,EAAU,CACdC,OAAQ,OACNC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAGjCC,KAAMC,KAAKC,UAAUvB,IAGrBK,MAAM,gBAAiBW,GACpBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAASD,Q,oBAIhC,WACE,IAAMT,EAASY,KAAKb,MAAMC,QAAQwB,KAAI,SAAAxB,GAAO,OAC3C,6BACE,4BAAIA,EAAQC,QADLD,EAAQyB,OAKnB,OACE,mCACA,sBAAKC,UAAU,WAAf,UACE,iDACA,yBAASA,UAAU,OAAnB,SACA,uBAAMC,SAAUf,KAAKV,aAArB,UACE,uBAAQwB,UAAU,OAAOE,KAAK,OAAOd,KAAK,OAAOC,MAAOH,KAAKb,MAAME,KAAM4B,SAAUjB,KAAKR,cACxF,wBAAQsB,UAAU,SAASE,KAAK,SAAhC,uBAGF,6BAAK5B,a,GA3DK8B,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.511e64a7.chunk.js","sourcesContent":["import React from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: [],\n      text: '',\n    }\n    this.inputMessage = this.inputMessage.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('/api/v1/chat/')\n    .then(response => response.json())\n    .then(data => this.setState({ message: data }));\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  inputMessage(event) {\n    const message = {\n      text: this.state.text,\n    };\n\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n        \n    body: JSON.stringify(message),\n    }\n\n    fetch('/api/v1/chat/', options)\n      .then(response => response.json())\n      .then(data => this.setState(data));\n  }\n  \n\n  render() {\n    const message= this.state.message.map(message => (\n      <li key={message.id}>\n        <p>{message.text}</p>\n      </li>\n    ))\n    \n    return(\n      <>\n      <div className=\"chat-log\">\n        <h1>Online Chat Log</h1>\n        <section className=\"main\">\n        <form onSubmit={this.inputMessage}>\n          <input  className=\"text\" type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n          <button className=\"button\" type=\"submit\">Send</button>\n        </form>\n        </section>\n        <ul>{message}</ul>\n        </div>\n      </>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}